//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SDMExt
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SDMExt.USD_R11_ExtSoap")]
    public interface USD_R11_ExtSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/downloadAttachment", ReplyAction="*")]
        System.Threading.Tasks.Task<SDMExt.downloadAttachmentResponse> downloadAttachmentAsync(SDMExt.downloadAttachmentRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class downloadAttachmentRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="downloadAttachment", Namespace="http://tempuri.org/", Order=0)]
        public SDMExt.downloadAttachmentRequestBody Body;
        
        public downloadAttachmentRequest()
        {
        }
        
        public downloadAttachmentRequest(SDMExt.downloadAttachmentRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class downloadAttachmentRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int loginToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string attachmentHandle;
        
        public downloadAttachmentRequestBody()
        {
        }
        
        public downloadAttachmentRequestBody(int loginToken, string attachmentHandle)
        {
            this.loginToken = loginToken;
            this.attachmentHandle = attachmentHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class downloadAttachmentResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="downloadAttachmentResponse", Namespace="http://tempuri.org/", Order=0)]
        public SDMExt.downloadAttachmentResponseBody Body;
        
        public downloadAttachmentResponse()
        {
        }
        
        public downloadAttachmentResponse(SDMExt.downloadAttachmentResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class downloadAttachmentResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public byte[] downloadAttachmentResult;
        
        public downloadAttachmentResponseBody()
        {
        }
        
        public downloadAttachmentResponseBody(byte[] downloadAttachmentResult)
        {
            this.downloadAttachmentResult = downloadAttachmentResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public interface USD_R11_ExtSoapChannel : SDMExt.USD_R11_ExtSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public partial class USD_R11_ExtSoapClient : System.ServiceModel.ClientBase<SDMExt.USD_R11_ExtSoap>, SDMExt.USD_R11_ExtSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public USD_R11_ExtSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(USD_R11_ExtSoapClient.GetBindingForEndpoint(endpointConfiguration), USD_R11_ExtSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public USD_R11_ExtSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(USD_R11_ExtSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public USD_R11_ExtSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(USD_R11_ExtSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public USD_R11_ExtSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SDMExt.downloadAttachmentResponse> SDMExt.USD_R11_ExtSoap.downloadAttachmentAsync(SDMExt.downloadAttachmentRequest request)
        {
            return base.Channel.downloadAttachmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<SDMExt.downloadAttachmentResponse> downloadAttachmentAsync(int loginToken, string attachmentHandle)
        {
            SDMExt.downloadAttachmentRequest inValue = new SDMExt.downloadAttachmentRequest();
            inValue.Body = new SDMExt.downloadAttachmentRequestBody();
            inValue.Body.loginToken = loginToken;
            inValue.Body.attachmentHandle = attachmentHandle;
            return ((SDMExt.USD_R11_ExtSoap)(this)).downloadAttachmentAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.USD_R11_ExtSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.USD_R11_ExtSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.USD_R11_ExtSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://10.195.181.213/USDExtension/USD_R11_Ext.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.USD_R11_ExtSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://10.195.181.213/USDExtension/USD_R11_Ext.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            USD_R11_ExtSoap,
            
            USD_R11_ExtSoap12,
        }
    }
}
